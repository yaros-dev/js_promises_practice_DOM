{"mappings":"ACEA,IAAM,EAAwB,SAAS,aAAa,CAAC,OAErD,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,IAAM,EAAqB,SAAC,CAA5B,EAAqC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC7B,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,OAAO,CAAC,EAAE,CAAG,eAC1B,EAAa,SAAS,CAAG,EAAU,QAAU,UAC7C,EAAa,WAAW,CAAG,EAC3B,EAAsB,WAAW,CAAC,EACpC,EAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAAc,WAClB,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WACT,EAAO,AAAI,MAAM,+BACjB,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAc,WAClB,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,EAC9C,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAc,CAAA,EACd,EAAe,CAAA,EAEb,EAAkB,WAClB,GAAe,IACjB,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEM,EAAkB,WACtB,EAAc,CAAA,EACd,GACF,EAEM,EAAmB,SAAC,CAA1B,EACE,EAAE,cAAc,GAChB,EAAe,CAAA,EACf,GACF,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEM,EAAgB,SAAC,CAAvB,EACE,EAAmB,EACrB,EAMA,EAAa,IAAI,CAAC,GAAe,KAAK,CAJlB,SAAC,CAArB,EACE,EAAmB,EAAM,OAAO,CAAE,CAAA,EACpC,GAGA,EAAc,IAAI,CAAC,GACnB,EAAa,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar notificationContainer = document.createElement(\"div\");\ndocument.body.appendChild(notificationContainer);\nvar createNotification = function(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var notification = document.createElement(\"div\");\n    notification.dataset.qa = \"notification\";\n    notification.className = isError ? \"error\" : \"success\";\n    notification.textContent = message;\n    notificationContainer.appendChild(notification);\n};\nvar firstPromise = new Promise(function(resolve, reject) {\n    var handleClick = function() {\n        resolve(\"First promise was resolved\");\n        document.removeEventListener(\"click\", handleClick);\n    };\n    document.addEventListener(\"click\", handleClick);\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n        document.removeEventListener(\"click\", handleClick);\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    var handleClick = function() {\n        resolve(\"Second promise was resolved\");\n        document.removeEventListener(\"click\", handleClick);\n        document.removeEventListener(\"contextmenu\", handleClick);\n    };\n    document.addEventListener(\"click\", handleClick);\n    document.addEventListener(\"contextmenu\", handleClick);\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var leftClicked = false;\n    var rightClicked = false;\n    var checkBothClicks = function() {\n        if (leftClicked && rightClicked) {\n            resolve(\"Third promise was resolved\");\n            document.removeEventListener(\"click\", handleLeftClick);\n            document.removeEventListener(\"contextmenu\", handleRightClick);\n        }\n    };\n    var handleLeftClick = function() {\n        leftClicked = true;\n        checkBothClicks();\n    };\n    var handleRightClick = function(e) {\n        e.preventDefault();\n        rightClicked = true;\n        checkBothClicks();\n    };\n    document.addEventListener(\"click\", handleLeftClick);\n    document.addEventListener(\"contextmenu\", handleRightClick);\n});\nvar handleSuccess = function(message) {\n    createNotification(message);\n};\nvar handleError = function(error) {\n    createNotification(error.message, true);\n};\nfirstPromise.then(handleSuccess).catch(handleError);\nsecondPromise.then(handleSuccess);\nthirdPromise.then(handleSuccess);\n\n//# sourceMappingURL=index.371270fb.js.map\n","'use strict';\n\nconst notificationContainer = document.createElement('div');\n\ndocument.body.appendChild(notificationContainer);\n\nconst createNotification = (message, isError = false) => {\n  const notification = document.createElement('div');\n\n  notification.dataset.qa = 'notification';\n  notification.className = isError ? 'error' : 'success';\n  notification.textContent = message;\n  notificationContainer.appendChild(notification);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const handleClick = () => {\n    resolve('First promise was resolved');\n    document.removeEventListener('click', handleClick);\n  };\n\n  document.addEventListener('click', handleClick);\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n    document.removeEventListener('click', handleClick);\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  const handleClick = () => {\n    resolve('Second promise was resolved');\n    document.removeEventListener('click', handleClick);\n    document.removeEventListener('contextmenu', handleClick);\n  };\n\n  document.addEventListener('click', handleClick);\n  document.addEventListener('contextmenu', handleClick);\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClicked = false;\n  let rightClicked = false;\n\n  const checkBothClicks = () => {\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n      document.removeEventListener('click', handleLeftClick);\n      document.removeEventListener('contextmenu', handleRightClick);\n    }\n  };\n\n  const handleLeftClick = () => {\n    leftClicked = true;\n    checkBothClicks();\n  };\n\n  const handleRightClick = (e) => {\n    e.preventDefault();\n    rightClicked = true;\n    checkBothClicks();\n  };\n\n  document.addEventListener('click', handleLeftClick);\n  document.addEventListener('contextmenu', handleRightClick);\n});\n\nconst handleSuccess = (message) => {\n  createNotification(message);\n};\n\nconst handleError = (error) => {\n  createNotification(error.message, true);\n};\n\nfirstPromise.then(handleSuccess).catch(handleError);\nsecondPromise.then(handleSuccess);\nthirdPromise.then(handleSuccess);\n"],"names":["notificationContainer","document","createElement","body","appendChild","createNotification","message","isError","arguments","length","notification","dataset","qa","className","textContent","firstPromise","Promise","resolve","reject","handleClick","removeEventListener","addEventListener","setTimeout","Error","secondPromise","thirdPromise","leftClicked","rightClicked","checkBothClicks","handleLeftClick","handleRightClick","e","preventDefault","handleSuccess","then","catch","error"],"version":3,"file":"index.371270fb.js.map"}